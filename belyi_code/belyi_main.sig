174,0
S,S3Action,,0,2,0,0,0,0,0,0,0,427,,0,0,222,,427,-38,-38,-38,-38,-38
S,BelyiMap,Computes the Belyi curve X and Belyi map f associated to the permutation triple sigma. Same description as below,1,0,1,82,0,222,1,0,0,0,0,0,0,0,82,,-1,-1,-38,-38,-38,-38
S,BelyiMap,"Computes the Belyi curve X and Belyi map f associated to the triangle subgroup Gamma. Currently only works for genera 0, 1. Optional parameters: prec to determine precision to work in m the size of the Galois orbit and Federalize to consider multiple neighborhoods around each point and Al, with possible values: Al := ""RecognizeSeries"" recognizes series over K, with linear algebra over K, Al := ""ByRamification"", computing the roots via ramification points, Al := ""NumericalKernel"", which computes the numerical kernel using multiplied power series expansions, Al := ""Newton"", which in genus zero (and now genus 1) computes an approximate solution and lifts it iteratively to precision precNewton, or Al := ""Default"", which does the best it can depending on the circumstances. NumAl := ""NumericalKernel"", which computes the numerical kernel using multiplied power series expansions, NumAl := ""Newton"", not implemented yet. ExactAl := ""GaloisOrbits"", which recognizes coefficients (using the entire Galois orbit) over the rationals, ExactAl := ""AlgebraicNumbers"", which uses MakeK to recognize coefficients over a number field",0,1,0,0,0,0,0,0,0,GrpPSL2,,-1,-1,-1,-38,-38,-38
S,BelyiMap,Computes the Belyi curve X and Belyi map f associated to the permutation triple sigma. Same description as below,1,0,1,82,1,82,0,222,1,0,0,0,0,0,0,0,82,,-1,-1,-38,-38,-38,-38
S,BelyiMap,"Computes the Belyi curves and Belyi maps associated to the triangle subgroups in Gammas. Optional parameters: prec to determine precision to work in m the size of the Galois orbit and Federalize to consider multiple neighborhoods around each point and Al, with possible values: Al := ""RecognizeSeries"" recognizes series over K, with linear algebra over K, Al := ""ByRamification"", computing the roots via ramification points, Al := ""NumericalKernel"", which computes the numerical kernel using multiplied power series expansions, Al := ""Newton"", which in genus zero computes an approximate solution and lifts it iteratively to precision precNewton, or Al := ""Default"", which does the best it can depending on the circumstances. // TODO implement genus 1 NumAl := ""NumericalKernel"", which computes the numerical kernel using multiplied power series expansions, NumAl := ""Newton"", not implemented yet. ExactAl := ""GaloisOrbits"", which recognizes coefficients (using the entire Galois orbit) over the rationals, ExactAl := ""AlgebraicNumbers"", which uses MakeK to recognize coefficients over a number field",1,0,1,82,0,GrpPSL2,1,0,0,0,0,0,0,0,82,,-1,-1,-1,-38,-38,-38
S,BelyiMapSanityCheck,"Does a basic check to see if the candidate is plausible. If lax is set to true, then work in the category of lax Belyi maps",1,0,1,82,0,222,3,0,0,0,0,0,0,0,427,,0,0,371,,0,0,82,,-1,-38,-38,-38,-38,-38
S,BelyiMapSanityCheck,Overloaded to take Gamma,0,1,0,0,0,0,0,0,0,GrpPSL2,,-1,-38,-38,-38,-38,-38
